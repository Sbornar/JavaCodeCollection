import java.io.*;
import java.util.*;
class Solution {
    List<List<Integer>> findSubsets(ArrayList<Integer> arr){
        //Write code here

        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();

        findSubsetshelp(0,ans,ds,arr);
        return ans;



    }
    public static void findSubsetshelp(int idx,List<List<Integer>> ans,List<Integer> ds,ArrayList<Integer> arr)
    {
        if(idx== arr.size())
        {
            ans.add(new ArrayList<Integer>(ds));
            return;
        }
        ds.add(arr.get(idx));
        findSubsetshelp(idx+1,ans,ds,arr);
        ds.remove(ds.size()-1);
        findSubsetshelp(idx+1,ans,ds,arr);
    }
}


public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N;
        N = sc.nextInt();
        ArrayList<Integer> arr = new ArrayList<>();  
        for (int i = 0; i < N; i++)
            arr.add(sc.nextInt());
        Solution Obj = new Solution();
        List<List<Integer>> subset = Obj.findSubsets(arr);
        subset.forEach(Collections::sort);
        Collections.sort(subset, (o1,o2) -> {
            int min = Math.min(o1.size(),o2.size());
            for(int i=0;i<min;i++)
            {
                if(o1.get(i)!=o2.get(i))
                {
                    return o1.get(i).compareTo(o2.get(i));
                }
            }
            return (o1.size()<=o2.size())? -1:1;  
        });
        int k = subset.size();
        for(int i=0;i<k;i++) {
            int m = subset.get(i).size();
            for(int j=0;j<m;j++) {
                if(j == m-1) {
                    System.out.print(subset.get(i).get(j) + "\n");
                }
                else {
                    System.out.print(subset.get(i).get(j) + " ");
                }
            }
        }
        sc.close();
    }
}
