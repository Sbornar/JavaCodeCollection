
import java.util.*;

public class Main {

  static int[] subtract(int[] n1, int[] n2)  {
       
        boolean isNegative = false;
        if (n1.length < n2.length || (n1.length == n2.length && compareArrays(n1, n2) < 0)) {
            
            int[] temp = n1;
            n1 = n2;
            n2 = temp;
            isNegative = true;
        }

        int i = n1.length - 1; 
        int j = n2.length - 1; 
        int borrow = 0; 

        int[] result = new int[n1.length];

        for (int k = result.length - 1; k >= 0; k--, i--, j--) {
            int digit1 = i >= 0 ? n1[i] : 0;
            int digit2 = j >= 0 ? n2[j] : 0;

            int diff = digit1 - digit2 - borrow;
            if (diff < 0) {
                diff += 10;
                borrow = 1;
            } else {
                borrow = 0;
            }

            result[k] = diff;
        }

     
        int leadingZeroIndex = 0;
        while (leadingZeroIndex < result.length && result[leadingZeroIndex] == 0) {
            leadingZeroIndex++;
        }

        if (leadingZeroIndex == result.length) {
            return new int[] { 0 };
        }

        if (isNegative) {
            System.out.print("-"); 
        }

        return Arrays.copyOfRange(result, leadingZeroIndex, result.length);
    }

   
    static int compareArrays(int[] arr1, int[] arr2) {
        if (arr1.length != arr2.length) {
            return Integer.compare(arr1.length, arr2.length);
        }
        for (int i = 0; i < arr1.length; i++) {
            if (arr1[i] != arr2[i]) {
                return Integer.compare(arr1[i], arr2[i]);
            }
        }
        return 0;
    }
  

 
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n1 = sc.nextInt();
    int[] arr1 = new int[n1];
    for (int i = 0; i < n1; i++) arr1[i] = sc.nextInt();

    int n2 = sc.nextInt();
    int[] arr2 = new int[n2];
    for (int i = 0; i < n2; i++) arr2[i] = sc.nextInt();
    sc.close();

    int[] res = subtract(arr1, arr2);
    for (int i : res) System.out.println(i);
  }
}
