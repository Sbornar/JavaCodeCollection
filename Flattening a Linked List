import java.util.*;

// Java program for flattening a Linked List
public class Main {

  /* Linked list Node*/
  static class Node {

    int data;
    Node right, down;

    Node(int data) {
      this.data = data;
      right = null;
      down = null;
    }
  }

  static Node flatten(Node root) {
    // your code here
    if(root==null || root.right==null)
    {
      return root;
    }
    Node c = flatten(root.right);
    root.right=null;
    return merge(root,c);
  }

  static Node merge(Node l1,Node l2)
  {
    Node dummy=new Node(-1);
    Node t=dummy;

    while(l1 != null && l2!=null)
    {
      if(l1.data < l2.data)
      {
        t.down=l1;
        t=t.down;
        l1=l1.down;
      }else{
        t.down=l2;
        t=t.down;
        l2=l2.down;
      }
    }
    if(l1!=null)
    {
      t.down=l1;
    }
    if(l2!=null)
    {
      t.down=l2;
    }
    return dummy.down;
  }

static void printList(Node head) {
    // your code here
    Node temp = head;
    while(temp!= null)
    {
      System.out.print(temp.data+" ");
      temp=temp.down;
    }
    System.out.println();
  }

  public static boolean isCorrect(Node claim) {
    if (claim.right != null) return false;
    Node copy = claim;
    while (copy.down != null) {
      if (copy.down.data < copy.data) return false;
      copy = copy.down;
    }
    return true;
  }

  // Driver's code
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    Node ll = new Node(-1), prev1 = null, head = ll;
    for (int i = 0; i < n; i++) {
      int k = sc.nextInt();
      Node prev2 = null, copy = ll;
      while (k-- != 0) {
        int val = sc.nextInt();
        copy.data = val;
        copy.down = new Node(-1);
        prev2 = copy;
        copy = copy.down;
      }
      prev2.down = null;
      ll.right = new Node(-1);
      prev1 = ll;
      ll = ll.right;
    }
    sc.close();
    prev1.right = null;
    Node flattenedNode = flatten(head);
    printList(flattenedNode);
    if (isCorrect(flattenedNode)) System.out.println(
      "yes"
    ); else System.out.println("no");
  }
}
